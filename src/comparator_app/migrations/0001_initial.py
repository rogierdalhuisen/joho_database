# Generated by Django 5.2.6 on 2025-09-08 17:28

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessRules',
            fields=[
                ('rule_id', models.AutoField(primary_key=True, serialize=False)),
                ('scope_entity', models.CharField(choices=[('provider', 'Provider'), ('product', 'Product'), ('module', 'Module'), ('coverage', 'Coverage'), ('parameter', 'Parameter')], max_length=20)),
                ('scope_id', models.IntegerField()),
                ('rule_type', models.CharField(choices=[('eligibility', 'Eligibility Rule'), ('validation', 'Validation Rule'), ('calculation', 'Calculation Rule'), ('exclusion', 'Exclusion Rule'), ('dependency', 'Dependency Rule')], max_length=20)),
                ('condition_json', models.JSONField()),
                ('message', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Business Rules',
                'db_table': 'business_rules',
            },
        ),
        migrations.CreateModel(
            name='CoverageLevels',
            fields=[
                ('level_id', models.AutoField(primary_key=True, serialize=False)),
                ('level_name', models.CharField(max_length=255)),
                ('level_rank', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
            ],
            options={
                'verbose_name_plural': 'Coverage Levels',
                'db_table': 'coverage_levels',
                'ordering': ['product_module', 'level_rank'],
            },
        ),
        migrations.CreateModel(
            name='Modules',
            fields=[
                ('module_id', models.AutoField(primary_key=True, serialize=False)),
                ('module_code', models.CharField(max_length=50, unique=True)),
                ('standard_name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Modules',
                'db_table': 'modules',
            },
        ),
        migrations.CreateModel(
            name='PremiumParameters',
            fields=[
                ('parameter_id', models.AutoField(primary_key=True, serialize=False)),
                ('parameter_name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Premium Parameters',
                'db_table': 'premium_parameters',
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('policy_type', models.CharField(choices=[('individual', 'Individual'), ('family', 'Family'), ('group', 'Group'), ('corporate', 'Corporate')], max_length=20)),
                ('max_age_application', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(120)])),
                ('max_age_coverage', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(120)])),
            ],
            options={
                'verbose_name_plural': 'Products',
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='Providers',
            fields=[
                ('provider_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('contact_details', models.JSONField(default=dict)),
                ('logo_url', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended')], default='active', max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Providers',
                'db_table': 'providers',
            },
        ),
        migrations.CreateModel(
            name='TargetAudiences',
            fields=[
                ('audience_id', models.AutoField(primary_key=True, serialize=False)),
                ('audience_name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Target Audiences',
                'db_table': 'target_audiences',
            },
        ),
        migrations.CreateModel(
            name='CoverageCategories',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=255)),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='comparator_app.coveragecategories')),
            ],
            options={
                'verbose_name_plural': 'Coverage Categories',
                'db_table': 'coverage_categories',
            },
        ),
        migrations.CreateModel(
            name='CoverageItems',
            fields=[
                ('item_id', models.AutoField(primary_key=True, serialize=False)),
                ('item_name', models.CharField(max_length=255)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coverage_items', to='comparator_app.coveragecategories')),
            ],
            options={
                'verbose_name_plural': 'Coverage Items',
                'db_table': 'coverage_items',
            },
        ),
        migrations.CreateModel(
            name='ParameterOptions',
            fields=[
                ('option_id', models.AutoField(primary_key=True, serialize=False)),
                ('option_value_text', models.CharField(max_length=255)),
                ('min_value', models.IntegerField(blank=True, null=True)),
                ('max_value', models.IntegerField(blank=True, null=True)),
                ('parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='comparator_app.premiumparameters')),
            ],
            options={
                'verbose_name_plural': 'Parameter Options',
                'db_table': 'parameter_options',
            },
        ),
        migrations.CreateModel(
            name='ProductModules',
            fields=[
                ('product_module_id', models.AutoField(primary_key=True, serialize=False)),
                ('is_mandatory', models.BooleanField(default=False)),
                ('provider_specific_name', models.CharField(blank=True, max_length=255)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_modules', to='comparator_app.modules')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_modules', to='comparator_app.products')),
            ],
            options={
                'verbose_name_plural': 'Product Modules',
                'db_table': 'product_modules',
                'unique_together': {('product', 'module')},
            },
        ),
        migrations.CreateModel(
            name='PremiumRates',
            fields=[
                ('rate_id', models.AutoField(primary_key=True, serialize=False)),
                ('premium_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='EUR', max_length=3)),
                ('billing_cycle', models.CharField(default='monthly', max_length=20)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='premium_rates', to='comparator_app.coveragelevels')),
                ('product_module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='premium_rates', to='comparator_app.productmodules')),
            ],
            options={
                'verbose_name_plural': 'Premium Rates',
                'db_table': 'premium_rates',
            },
        ),
        migrations.AddField(
            model_name='premiumparameters',
            name='product_module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='premium_parameters', to='comparator_app.productmodules'),
        ),
        migrations.AddField(
            model_name='coveragelevels',
            name='product_module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coverage_levels', to='comparator_app.productmodules'),
        ),
        migrations.AddField(
            model_name='products',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='comparator_app.providers'),
        ),
        migrations.CreateModel(
            name='RateParameterMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comparator_app.parameteroptions')),
                ('rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comparator_app.premiumrates')),
            ],
            options={
                'verbose_name_plural': 'Rate Parameter Mappings',
                'db_table': 'rate_parameter_mapping',
                'unique_together': {('rate', 'option')},
            },
        ),
        migrations.AddField(
            model_name='premiumrates',
            name='parameter_options',
            field=models.ManyToManyField(related_name='premium_rates', through='comparator_app.RateParameterMapping', to='comparator_app.parameteroptions'),
        ),
        migrations.CreateModel(
            name='ProductTargetAudiences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comparator_app.products')),
                ('audience', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comparator_app.targetaudiences')),
            ],
            options={
                'verbose_name_plural': 'Product Target Audiences',
                'db_table': 'product_target_audiences',
                'unique_together': {('product', 'audience')},
            },
        ),
        migrations.AddField(
            model_name='products',
            name='target_audiences',
            field=models.ManyToManyField(related_name='products', through='comparator_app.ProductTargetAudiences', to='comparator_app.targetaudiences'),
        ),
        migrations.CreateModel(
            name='CoverageItemDetails',
            fields=[
                ('detail_id', models.AutoField(primary_key=True, serialize=False)),
                ('coverage_type', models.CharField(choices=[('amount', 'Fixed Amount'), ('percentage', 'Percentage'), ('limit', 'Coverage Limit'), ('deductible', 'Deductible'), ('excluded', 'Excluded'), ('included', 'Included')], max_length=20)),
                ('numeric_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('currency', models.CharField(default='EUR', max_length=3)),
                ('period', models.CharField(blank=True, max_length=50)),
                ('conditions_text', models.TextField(blank=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coverage_details', to='comparator_app.coverageitems')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coverage_details', to='comparator_app.coveragelevels')),
            ],
            options={
                'verbose_name_plural': 'Coverage Item Details',
                'db_table': 'coverage_item_details',
                'unique_together': {('level', 'item')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='premiumparameters',
            unique_together={('product_module', 'parameter_name')},
        ),
        migrations.AlterUniqueTogether(
            name='coveragelevels',
            unique_together={('product_module', 'level_rank')},
        ),
    ]
